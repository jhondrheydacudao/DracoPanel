<!DOCTYPE html>
<html lang="en" class="h-full">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= name %> - Login</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="icon" type="image/png" href="https://yt3.googleusercontent.com/IVqzx0L3Ffpapttg-WK5yU9frk4AIVKixHnmmQjQ7RLrt4e66-7Ox6srKG_QVat5ceEq-98-s9s=s160-c-k-c0x00ffffff-no-rj">
  <link href="https://api.fontshare.com/v2/css?f[]=general-sans@500,300,600,400,700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'General Sans', sans-serif;
      overflow-x: hidden;
    }
    
    .fade-in { 
      opacity: 0; 
      transform: translateY(20px); 
    }
    
    /* Animated background */
    .gradient-bg {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      background: linear-gradient(-45deg, #0b0d0f, #1a1c2e, #2a1e3e, #3a1f4e);
      background-size: 400% 400%;
      animation: gradient 15s ease infinite;
    }
    
    @keyframes gradient {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }
    
    /* Floating particles */
    .particles {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      overflow: hidden;
    }
    
    .particle {
      position: absolute;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 50%;
      filter: blur(1px);
      animation: float linear infinite;
    }
    
    @keyframes float {
      0% { transform: translateY(0) translateX(0) rotate(0deg); }
      100% { transform: translateY(-100vh) translateX(20vw) rotate(360deg); }
    }
    
    /* Form focus effects */
    .form-input:focus {
      box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.3);
      transition: all 0.2s ease;
    }
    
    /* Button hover effects */
    .btn-hover {
      transition: all 0.3s ease;
    }
    
    .btn-hover:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 20px -10px rgba(99, 102, 241, 0.5);
    }
    
    /* Responsive adjustments */
    @media (max-width: 640px) {
      main {
        padding: 1rem;
      }
    }
  </style>
</head>

<body class="text-gray-300 min-h-screen flex flex-col">
  <!-- Animated Background -->
  <div class="gradient-bg"></div>
  <div class="particles" id="particles"></div>
  
  <main class="flex-grow flex items-center justify-center p-8">
    <div class="bg-white/5 backdrop-blur-md p-8 md:p-10 rounded-xl shadow-2xl max-w-md w-full fade-in border border-white/10">
      <div class="flex justify-center mb-6 fade-in">
        <div class="p-4 bg-indigo-600/20 rounded-full">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-12 h-12 text-indigo-400">
            <path stroke-linecap="round" stroke-linejoin="round" d="M16.5 10.5V6.75a4.5 4.5 0 1 0-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 0 0 2.25-2.25v-6.75a2.25 2.25 0 0 0-2.25-2.25H6.75a2.25 2.25 0 0 0-2.25 2.25v6.75a2.25 2.25 0 0 0 2.25 2.25Z" />
          </svg>
        </div>
      </div>

      <h2 class="text-center text-3xl md:text-4xl font-extrabold text-white tracking-tight fade-in">Welcome back!</h2>
      <p class="text-center text-gray-400 mt-2 text-sm md:text-base fade-in">Sign in to your account to continue</p>
         
      <!-- User/Password Login Form -->
      <form method="POST" action="/auth/login" class="mt-8 space-y-6 fade-in" id="loginForm">
        <div class="space-y-4">
          <div>
            <label for="username" class="sr-only">Username</label>
            <input type="text" 
              id="username" 
              name="username" 
              class="form-input flex-grow p-3 w-full bg-white/10 border border-white/20 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-white rounded-lg placeholder-gray-400" 
              placeholder="Username" 
              required
              autocomplete="username">
          </div>
          <div>
            <label for="password" class="sr-only">Password</label>
            <input type="password" 
              id="password" 
              name="password" 
              class="form-input flex-grow p-3 w-full bg-white/10 border border-white/20 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-white rounded-lg placeholder-gray-400" 
              placeholder="Password" 
              required
              autocomplete="current-password">
          </div>
        </div>
        
        <div class="flex items-center justify-between fade-in">
          <div class="flex items-center">
            <input id="remember-me" name="remember-me" type="checkbox" class="h-4 w-4 rounded bg-white/10 border-white/20 text-indigo-600 focus:ring-indigo-500">
            <label for="remember-me" class="ml-2 block text-sm text-gray-300">Remember me</label>
          </div>
          
          <div class="text-sm">
            <a href="/forgot-password" class="text-indigo-400 hover:text-indigo-300 transition font-medium">Forgot password?</a>
          </div>
        </div>
        
        <button type="submit" class="btn-hover w-full flex items-center justify-center gap-2 bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-3 px-5 rounded-lg transition duration-300 transform hover:scale-[1.02]">                     
          <span>Sign in</span>
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
            <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3" />
          </svg>
        </button>
      </form>
      
      <!-- Social Login Options -->
      <div class="mt-6 fade-in">
        <div class="relative">
          <div class="absolute inset-0 flex items-center">
            <div class="w-full border-t border-white/10"></div>
          </div>
          <div class="relative flex justify-center text-sm">
            <span class="px-2 bg-white/5 text-gray-400">Or continue with</span>
          </div>
        </div>

        <div class="mt-6 grid grid-cols-2 gap-3">
          <a href="#" class="btn-hover flex w-full items-center justify-center gap-2 rounded-lg bg-white/5 px-4 py-2.5 text-sm font-medium text-white hover:bg-white/10 transition">
            <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
              <path fill-rule="evenodd" d="M10 0C4.477 0 0 4.477 0 10c0 4.42 2.865 8.166 6.839 9.489.5.092.682-.217.682-.482 0-.237-.008-.866-.013-1.7-2.782.603-3.369-1.342-3.369-1.342-.454-1.155-1.11-1.462-1.11-1.462-.908-.62.069-.608.069-.608 1.003.07 1.531 1.03 1.531 1.03.892 1.529 2.341 1.087 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.11-4.555-4.943 0-1.091.39-1.984 1.029-2.683-.103-.253-.446-1.27.098-2.647 0 0 .84-.269 2.75 1.025A9.564 9.564 0 0110 4.844c.85.004 1.705.114 2.504.336 1.909-1.294 2.747-1.025 2.747-1.025.546 1.377.203 2.394.1 2.647.64.699 1.028 1.592 1.028 2.683 0 3.842-2.339 4.687-4.566 4.933.359.309.678.919.678 1.852 0 1.336-.012 2.415-.012 2.743 0 .267.18.578.688.48C17.14 18.163 20 14.418 20 10c0-5.523-4.477-10-10-10z" clip-rule="evenodd" />
            </svg>
            <span>GitHub</span>
          </a>
          
          <a href="#" class="btn-hover flex w-full items-center justify-center gap-2 rounded-lg bg-white/5 px-4 py-2.5 text-sm font-medium text-white hover:bg-white/10 transition">
            <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
              <path d="M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84" />
            </svg>
            <span>Twitter</span>
          </a>
        </div>
      </div>
      
      <!-- Register Button -->
      <p class="text-center text-gray-400 mt-6 text-sm fade-in">Don't have an account? 
        <a href="/register" class="text-indigo-400 hover:text-indigo-300 transition font-medium">Register here</a>
      </p>
    </div>
  </main>

  <script>
    // Enhanced GSAP animations
    document.addEventListener('DOMContentLoaded', () => {
      // Staggered fade-in animation
      gsap.to(".fade-in", { 
        opacity: 1, 
        y: 0, 
        duration: 0.8, 
        stagger: 0.15, 
        ease: "back.out(1.2)" 
      });
      
      // Form submission animation
      const loginForm = document.getElementById('loginForm');
      if (loginForm) {
        loginForm.addEventListener('submit', (e) => {
          const button = loginForm.querySelector('button[type="submit"]');
          gsap.to(button, {
            scale: 0.95,
            duration: 0.2,
            yoyo: true,
            repeat: 1
          });
        });
      }
      
      // Create floating particles
      createParticles();
    });
    
    function createParticles() {
      const particlesContainer = document.getElementById('particles');
      const particleCount = 30;
      
      for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.classList.add('particle');
        
        // Random size between 2px and 6px
        const size = Math.random() * 4 + 2;
        particle.style.width = `${size}px`;
        particle.style.height = `${size}px`;
        
        // Random position
        particle.style.left = `${Math.random() * 100}vw`;
        particle.style.top = `${Math.random() * 100}vh`;
        
        // Random animation duration (10s to 30s)
        const duration = Math.random() * 20 + 10;
        particle.style.animationDuration = `${duration}s`;
        
        // Random delay
        particle.style.animationDelay = `${Math.random() * 5}s`;
        
        particlesContainer.appendChild(particle);
      }
    }
  </script>
</body>
</html>
