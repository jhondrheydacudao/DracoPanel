<%- include('../components/admin_template') %>
<main id="content" class="p-4 md:p-6 lg:p-8">
  <div class="max-w-7xl mx-auto">
    <!-- Header Section -->
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6">
      <div class="mb-4 md:mb-0">
        <h1 class="text-2xl font-bold text-white"><%= req.translations.users %></h1>
        <p class="text-sm text-gray-400 mt-1">Manage all system users and permissions</p>
      </div>
      
      <% if (req.user.admin === true) { %>
        <button id="createButton" type="button" class="flex items-center justify-center gap-2 px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700 text-white font-medium rounded-lg shadow-lg hover:shadow-xl transition-all duration-200 transform hover:-translate-y-0.5">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
          </svg>
          <span>Create User</span>
        </button>
      <% } %>
    </div>

    <!-- Notification Messages -->
    <% if (req.query.err=="none" ) { %>
      <div class="mb-6 p-4 bg-indigo-900/30 border border-indigo-500/50 rounded-lg backdrop-blur-sm flex items-start">
        <div class="flex-shrink-0">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-white">Success</h3>
          <div class="mt-1 text-sm text-indigo-200">
            <p>Action completed - User has been created successfully.</p>
          </div>
        </div>
      </div>
    <% } %>
    
    <% if (req.query.err == "EDITED") { %>
      <div class="mb-6 p-4 bg-emerald-900/30 border border-emerald-500/50 rounded-lg backdrop-blur-sm flex items-start">
        <div class="flex-shrink-0">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-emerald-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-white">Success</h3>
          <div class="mt-1 text-sm text-emerald-200">
            <p>Action completed - User has been edited successfully.</p>
          </div>
        </div>
      </div>
    <% } %>

    <!-- User Creation Form (Hidden by default) -->
    <div id="nodeForm" class="hidden bg-gray-800/50 border border-gray-700 rounded-xl p-6 mb-8 backdrop-blur-sm">
      <h2 class="text-lg font-semibold text-white mb-6">Create New User</h2>
      <form class="space-y-6">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <!-- Username Field -->
          <div>
            <label for="userName" class="block text-sm font-medium text-gray-300 mb-1">Username</label>
            <input
              id="userName"
              type="text"
              name="username"
              class="w-full px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition"
              placeholder="<%= req.translations.usernamePlaceholder %>"
            />
          </div>
          
          <!-- Email Field -->
          <div>
            <label for="email" class="block text-sm font-medium text-gray-300 mb-1">Email</label>
            <input
              id="email"
              type="email"
              name="email"
              class="w-full px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition"
              placeholder="<%= req.translations.emailPlaceholder %>"
            />
          </div>
          
          <!-- Password Field -->
          <div>
            <label for="userPass" class="block text-sm font-medium text-gray-300 mb-1">Password</label>
            <input
              id="userPass"
              type="password"
              name="password"
              class="w-full px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition"
              placeholder="••••••••"
            />
          </div>
          
          <!-- Admin Status -->
          <div>
            <label for="userAdmin" class="block text-sm font-medium text-gray-300 mb-1">Admin Privileges</label>
            <select
              id="userAdmin"
              name="admin"
              class="w-full px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition"
            >
              <option value="true">Yes - Full Administrator</option>
              <option value="false" selected>No - Regular User</option>
            </select>
          </div>
          
          <!-- Verified Status -->
          <div>
            <label for="userVerified" class="block text-sm font-medium text-gray-300 mb-1">Verified Status</label>
            <select
              id="userVerified"
              name="verified"
              class="w-full px-4 py-3 bg-gray-700/50 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition"
            >
              <option value="true">Verified</option>
              <option value="false">Not Verified</option>
            </select>
          </div>
        </div>
        
        <div class="flex justify-end space-x-3 pt-4">
          <button type="button" id="cancelCreate" class="px-6 py-2.5 text-sm font-medium text-gray-300 bg-gray-700 hover:bg-gray-600 rounded-lg transition">
            Cancel
          </button>
          <button
            id="createNodeBtn"
            type="button"
            class="px-6 py-2.5 text-sm font-medium text-white bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700 rounded-lg shadow transition"
          >
            Create User
          </button>
        </div>
      </form>
    </div>

    <!-- Users Table -->
    <div class="bg-gray-800/50 border border-gray-700 rounded-xl overflow-hidden backdrop-blur-sm">
      <!-- Table Header -->
      <div class="grid grid-cols-12 gap-4 px-6 py-4 bg-gray-700/50 border-b border-gray-700 text-sm font-medium text-gray-400 uppercase tracking-wider">
        <div class="col-span-3 md:col-span-2">User</div>
        <div class="col-span-4 md:col-span-3">Email</div>
        <div class="hidden md:block md:col-span-2">Role</div>
        <div class="col-span-5 md:col-span-3 text-right">Actions</div>
      </div>
      
      <!-- Users List -->
      <div class="divide-y divide-gray-700/50">
        <% users.forEach(function(user) { %>
          <div class="grid grid-cols-12 gap-4 px-6 py-4 hover:bg-gray-700/30 transition">
            <!-- User Info -->
            <div class="col-span-3 md:col-span-2 flex items-center">
              <div class="flex-shrink-0 h-10 w-10 rounded-full bg-indigo-500/20 flex items-center justify-center text-indigo-300 font-medium">
                <%= user.username.charAt(0).toUpperCase() %>
              </div>
              <div class="ml-3">
                <div class="text-sm font-medium text-white"><%= user.username %></div>
                <div class="text-xs text-gray-400 md:hidden"><%= user.email %></div>
              </div>
            </div>
            
            <!-- Email -->
            <div class="col-span-4 md:col-span-3 flex items-center">
              <div class="text-sm text-gray-300 truncate"><%= user.email %></div>
            </div>
            
            <!-- Role (Desktop only) -->
            <div class="hidden md:flex md:col-span-2 items-center">
              <% if (user.admin==true) { %>
                <span class="px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-500/20 text-indigo-300">Admin</span>
              <% } else { %>
                <span class="px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-600/20 text-gray-300">User</span>
              <% } %>
            </div>
            
            <!-- Actions -->
            <div class="col-span-5 md:col-span-3 flex justify-end space-x-2">
              <a href="/admin/users/edit/<%= user.userId %>" class="inline-flex items-center px-3 py-1.5 border border-gray-600 rounded-lg text-sm font-medium text-gray-300 hover:bg-gray-700 hover:text-white transition">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                </svg>
                Edit
              </a>
              <button data-user-id="<%= user.userId %>" class="removeButton inline-flex items-center px-3 py-1.5 border border-red-500/30 rounded-lg text-sm font-medium text-red-400 hover:bg-red-900/30 hover:text-red-300 transition">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                </svg>
                Remove
              </button>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  </div>
</main>
<%- include('../components/footer') %>

<script>
  // Toggle user creation form
  document.getElementById("createButton").addEventListener("click", function() {
    document.getElementById("nodeForm").classList.toggle("hidden");
    this.classList.toggle("bg-gray-700");
    this.classList.toggle("text-indigo-400");
  });

  // Cancel button in form
  document.getElementById("cancelCreate")?.addEventListener("click", function() {
    document.getElementById("nodeForm").classList.add("hidden");
    document.getElementById("createButton").classList.remove("bg-gray-700", "text-indigo-400");
  });

  // Create user
  document.getElementById("createNodeBtn").addEventListener("click", function() {
    const username = document.getElementById("userName").value;
    const email = document.getElementById("email").value;
    const password = document.getElementById("userPass").value;
    const adminString = document.getElementById("userAdmin").value;
    const admin = adminString === "true";
    const verifiedString = document.getElementById("userVerified").value;
    const verified = verifiedString === "true";

    const nodeData = {
      username,
      email,
      password,
      admin,
      verified
    };

    fetch("/users/create", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(nodeData),
    })
    .then((response) => {
      if (response.ok) {
        return response.json();
      }
      throw new Error("Failed to create user");
    })
    .then((data) => {
      window.location.href = "/admin/users?err=none";
    })
    .catch((error) => {
      alert('<%= req.translations.userCreateError %>: ' + error.message);
    });
  });

  // Remove user
  document.querySelectorAll('.removeButton').forEach(button => {
    button.addEventListener('click', function() {
      const userId = this.dataset.userId;
      const totalUsers = document.querySelectorAll('.removeButton').length;
      
      if (totalUsers === 1) {
        alert('<%= req.translations.databaseCannotDelete %>');
        return;
      }
      
      const currentUserId = '<%= user.userId %>';
      if (userId === currentUserId) {
        alert('<%= req.translations.userCannotDelete %>');
        return;
      }
      
      if (!confirm('<%= req.translations.userDeletingConfirmation %>')) return;

      fetch('/user/delete', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ userId })
      })
      .then(response => {
        if (response.ok) {
          window.location.reload();
        } else {
          throw new Error('Failed to delete user');
        }
      })
      .catch(error => {
        alert('<%= req.translations.userDeletingError %>' + error.message);
      });
    });
  });
</script>
